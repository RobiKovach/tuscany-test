import { createContext, useContext, useEffect, useState } from "react";
import { auth } from "./firebase";
import { onAuthStateChanged, signOut } from "firebase/auth";

const AuthContext = createContext();

export function AuthProvider({ children }) {
  const [user, setUser] = useState(null);
  const isAuthenticated = !!user; // –Ø–∫—â–æ user —ñ—Å–Ω—É—î, –∑–Ω–∞—á–∏—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–π

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (user) => {
      if (user) {
        console.log("‚úÖ User logged in:", user);
        setUser(user); // –û–Ω–æ–≤–ª—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω
      } else {
        console.log("üî¥ User logged out");
        setUser(null);
      }
    });

    return () => unsubscribe(); // –û—á–∏—â–µ–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–∏ –ø—Ä–∏ —Ä–æ–∑–º–æ–Ω—Ç—É–≤–∞–Ω–Ω—ñ
  }, []);

  const logout = async () => {
    try {
      await signOut(auth);
      setUser(null);
      console.log("üî¥ User successfully logged out");
    } catch (error) {
      console.error("‚ùå Logout error:", error);
    }
  };

  return (
    <AuthContext.Provider value={{ isAuthenticated, user, setUser, logout }}>
      {children}
    </AuthContext.Provider>
  );
}

export function useAuth() {
  return useContext(AuthContext);
}
